@mixin flex ($align-items: center, $justify-content: center, $flex-direction: row, $flex-wrap: unset)
{
    display: flex;
    align-items: $align-items;
    justify-content: $justify-content;
    flex-direction: $flex-direction;
    flex-wrap: $flex-wrap;
}

@mixin button (
        $bg-color: $primary-color,
        $color: $secondary-color,
        $border-color: $secondary-color,
        $hover-effect: invert-colors,
        $has-border: true,
        $has-padding: true,
        $has-border-radius: true
    )
{
    font-family: $font-family;
    
    @if $has-border {
        border: $border-width solid $border-color;
    }
    @else {
        border: 0;
    }

    background-color: $bg-color;
    color: $color;
    
    @if $has-border-radius {
        border-radius: $border-radius;
    }
    
    @if $has-padding {
        padding: 10px;
    }
    @else {
        padding: 0;
    }

    font-size: 20px;
    cursor: pointer;
    transition: $transition-time;

    @if $hover-effect == invert-colors {
        &:hover:not(.blocked){
            background-color: $color;
            color: $bg-color;
        }
    }
    @else if $hover-effect == underline {
        &:hover:not(.blocked){
            text-decoration: underline;
        }
    }
    @else if $hover-effect == no-text-decoration {
        &:hover:not(.blocked){
            text-decoration: none;
        }
    }

    &.blocked{
        cursor: not-allowed;
        opacity: 0.7;
    }
}

@mixin input-container ($bg-color: $primary-color, $color: $secondary-color, $has-icon: true)
{
    border-radius: $border-radius;

    &:focus-within
    {
        box-shadow: 0 0 $box-shadow-blur-radius $color;
    }
        
    input
    {
        font-family: $font-family;
        border: $border-width solid $color;
        background-color: $bg-color;
        color: $color;
        border-radius: $border-radius;
        padding: 10px;
        font-size: 20px;

        @if $has-icon
        {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;

            & + .input-icon
            {
                @include flex;

                background-color: $color;
                color: $bg-color;
                font-size: 20px;
                border-top-right-radius: $border-radius;
                border-bottom-right-radius: $border-radius;
                padding: 10px;
                border: 0;
                cursor: pointer;
            }

            &:focus + .input-icon
            {
                padding: 10px $standard-spacing;
            }
        }

        &::placeholder
        {
            color: $color;
            font-weight: $regular;
        }
    }
}

@mixin animation (
        $name,
        $duration: 100ms,
        $timing-function: linear,
        $iteration-count: unset,
        $fill-mode: forwards
    ) {
    animation: $name;
    animation-duration: $duration;
    animation-timing-function: $timing-function;
    animation-iteration-count: $iteration-count;
    animation-fill-mode: $fill-mode;
}

@mixin text-ellipsis-on-overflow {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin language-icon($languages) {
    @each $language in $languages {
        .#{$language} {
            width: 40px;
            height: 100%;
            background-position: center;
            background-repeat: no-repeat;
            background-size: contain;
            background-origin: content-box;
            padding: 5px;
            background-color: $primary-color;
            border-radius: $border-radius;
            background-image: url("../../img/icons/languages/" + $language + ".svg");
        }
    }
}

@mixin checkbox ($bg-color: $primary-color, $color: $secondary-color) {
    position: absolute;
    opacity: 0;
    
    & + label{
        position: relative;
        cursor: pointer;
        padding: 0;
    }
    
    & + label::before{
        content: "";
        margin-right: $standard-spacing;
        display: inline-block;
        vertical-align: text-top;
        width: $standard-spacing;
        height: $standard-spacing;
        background-color: $bg-color;
        border: $border-width solid $color;
        transition: $transition-time;
    }
    
    /*
    &:hover + label::before{
        background: $color;
    }
    */
    
    &:checked + label::before{
        background: $color;
    }
    
    &:disabled + label{
        cursor: auto;
        opacity: 0.7;
    }
    
    &:disabled + label::before{
        box-shadow: none;
        opacity: 0.7;
    }
    
    &:checked + label::after{
        content: "";
        position: absolute;
        left: 5px;
        top: 9px;
        background-color: $bg-color;
        width: 2px;
        height: 2px;
        box-shadow: 
            2px 0 0 $bg-color,
            4px 0 0 $bg-color,
            4px -2px 0 $bg-color,
            4px -4px 0 $bg-color,
            4px -6px 0 $bg-color,
            4px -8px 0 $bg-color;
        transform: rotate(45deg);
    }
}